{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\50526683848\\\\Desktop\\\\ReactEvent\\\\Projeto Event-React\\\\event\\\\src\\\\pages\\\\cadastroTipoEvento\\\\cadastroTipoEvento.jsx\",\n  _s = $RefreshSig$();\nimport Header from \"../../components/header/Header\";\nimport Footer from \"../../components/footer/Footer\";\nimport Lista from \"../../components/lista/Lista\";\nimport Cadastro from \"../../components/cadastro/Cadastro\";\nimport Img from \"../../assests/img/cadastrotipoevento.png\";\nimport api from \"../../Services/services\";\nimport { useState, useEffect } from \"react\";\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CadastroTipoEvento = () => {\n  _s();\n  const [tipoEvento, setTipoEvento] = useState(\"\");\n  const [listaTipoEvento, setListaTipoEvento] = useState([]);\n  function alertar(icone, mensagem) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\"\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          title: \"Deleted!\",\n          text: \"Your file has been deleted.\",\n          icon: \"success\"\n        });\n      }\n    });\n\n    //----------alertarAAAA SUCESSO--------------------------------------------\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"top-end\",\n      showConfirmButton: false,\n      timer: 3000,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.onmouseenter = Swal.stopTimer;\n        toast.onmouseleave = Swal.resumeTimer;\n      }\n    });\n    Toast.fire({\n      icon: icone,\n      title: mensagem\n    });\n  }\n  async function cadastrarTipoEvento(evt) {\n    evt.preventDefault();\n    if (tipoEvento.trim() != \"\") {\n      try {\n        await api.post(\"tiposEventos\", {\n          tituloTipoEvento: tipoEvento\n        });\n        setTipoEvento(\"\");\n        alertar(\"success\", \"Cadastrado com sucesso!\");\n      } catch (error) {\n        console.log(error);\n        alertar(\"error\", \"Erro ao cadastrar! Entre em contato\");\n      }\n    } else {\n      alertar(\"error\", \"Preencha o campo!\");\n    }\n  }\n  async function listarTipoEvento() {\n    try {\n      const resposta = await api.get(\"tiposEventos\");\n      //console.log(resposta.data);\n      setListaTipoEvento(resposta.data);\n      //console.log(resposta.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    listarTipoEvento();\n  }, [listarTipoEvento]);\n\n  //  async function deletarTipoEvento(tipoeventoId) {\n  //     try {\n\n  //         Swal.fire({\n  //             title: \"Você tem certeza?\",\n  //             text: \"Você não poderá reverter isso!\",\n  //             icon: \"warning\",\n  //             showCancelButton: true,\n  //             confirmButtonColor: \"#3085d6\",\n  //             cancelButtonColor: \"#d33\",\n  //             confirmButtonText: \"Sim, delete isso!\"\n  //         }).then(async (result) => {\n  //             if (result.isConfirmed) {\n  //                 await api.delete(`genero/${tipoeventoId.idTipoEvento}`);\n  //                 Swal.fire({\n  //                     title: \"Deletado!\",\n  //                     text: \"Tipo de evento deletado com sucesso!\",\n  //                     icon: \"success\"\n  //                 });\n  //             }\n  //         });\n  //         listaTipoEvento();\n\n  //     } catch (error) {\n  //         console.log(error);\n  //     }\n\n  // }\n\n  // async function editarTipoEvento(tipoEvento) {\n  //    console.log(\"yas fica quieta\");\n\n  //     const { value: novoTipoEvento } = await Swal.fire({\n  //         title: \"Edite seu evento\",\n  //         input: \"text\",\n  //         inputLabel: \"Novo Tipo Evento\",\n  //         inputValue: tipoEvento.tituloTipoEvento,\n  //         showCancelButton: true,\n  //         inputValidator: (value) => {\n  //             if (!value) {\n  //                 return \"O campo precisa estar preenchido!\";\n  //             }\n  //         }\n  //     });\n  //     if (novoTipoEvento) {\n  //         try{\n  //             console.log(tipoEvento.tituloTipoEvento);\n  //             console.log(novoTipoEvento);\n  //             api.put(`tiposEventos/${tipoEvento.idTipoEvento}`,\n  //             {nome: novoTipoEvento});\n  //             Swal.fire(`O evento modificado ${novoTipoEvento}`);\n  //         }catch(error){\n  //             console.log(error);\n\n  //         }\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Cadastro, {\n        tituloCadastro: \"Cadastro Tipo De Eventos\",\n        visibilidade: \"none\",\n        NomeBotao: \"Cadastrar\",\n        img_banner: Img,\n        campoPlaceholder: \"Titulo\",\n        funcCadastro: cadastrarTipoEvento,\n        valorInput: tipoEvento,\n        setValorInput: setTipoEvento\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Lista, {\n        listatitulo: \"Lista Tipo De Eventos\",\n        titulocoluna: \"Titulo\",\n        titulo: \"Tipo Evento\",\n        titulo1: \"Titulo Evento\",\n        lista: listaTipoEvento,\n        tipoLista: \"TiposEventos\"\n\n        // funcExcluir={deletarTipoEvento}\n        // funcEditar={editarTipoEvento}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(CadastroTipoEvento, \"ww2vUlXB+BQq68yxWNZkikQ82s4=\");\n_c = CadastroTipoEvento;\nexport default CadastroTipoEvento;\nvar _c;\n$RefreshReg$(_c, \"CadastroTipoEvento\");","map":{"version":3,"names":["Header","Footer","Lista","Cadastro","Img","api","useState","useEffect","Swal","jsxDEV","_jsxDEV","Fragment","_Fragment","CadastroTipoEvento","_s","tipoEvento","setTipoEvento","listaTipoEvento","setListaTipoEvento","alertar","icone","mensagem","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","onmouseenter","stopTimer","onmouseleave","resumeTimer","cadastrarTipoEvento","evt","preventDefault","trim","post","tituloTipoEvento","error","console","log","listarTipoEvento","resposta","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","tituloCadastro","visibilidade","NomeBotao","img_banner","campoPlaceholder","funcCadastro","valorInput","setValorInput","listatitulo","titulocoluna","titulo","titulo1","lista","tipoLista","_c","$RefreshReg$"],"sources":["C:/Users/50526683848/Desktop/ReactEvent/Projeto Event-React/event/src/pages/cadastroTipoEvento/cadastroTipoEvento.jsx"],"sourcesContent":["import Header from \"../../components/header/Header\";\r\nimport Footer from \"../../components/footer/Footer\";\r\nimport Lista from \"../../components/lista/Lista\";\r\nimport Cadastro from \"../../components/cadastro/Cadastro\";\r\nimport Img from \"../../assests/img/cadastrotipoevento.png\"\r\nimport api from \"../../Services/services\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nconst CadastroTipoEvento = () => {\r\n\r\n    const [tipoEvento, setTipoEvento] = useState(\"\")\r\n    const [listaTipoEvento, setListaTipoEvento] = useState([])\r\n\r\n\r\n    function alertar(icone, mensagem) {\r\n        \r\n        Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"You won't be able to revert this!\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes, delete it!\"\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire({\r\n                    title: \"Deleted!\",\r\n                    text: \"Your file has been deleted.\",\r\n                    icon: \"success\"\r\n                });\r\n            }\r\n        });\r\n     \r\n        //----------alertarAAAA SUCESSO--------------------------------------------\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.onmouseenter = Swal.stopTimer;\r\n                toast.onmouseleave = Swal.resumeTimer;\r\n            }\r\n        });\r\n        Toast.fire({\r\n            icon: icone,\r\n            title: mensagem\r\n        });\r\n\r\n    }\r\n\r\n    async function cadastrarTipoEvento(evt) {\r\n        evt.preventDefault();\r\n\r\n        if (tipoEvento.trim() != \"\") {\r\n\r\n            try {\r\n\r\n                await api.post(\"tiposEventos\", { tituloTipoEvento: tipoEvento });\r\n                setTipoEvento(\"\");\r\n                alertar(\"success\", \"Cadastrado com sucesso!\")\r\n                \r\n            } catch (error) {\r\n                console.log(error);\r\n                alertar(\"error\", \"Erro ao cadastrar! Entre em contato\")\r\n\r\n            }\r\n        } else {\r\n            alertar(\"error\", \"Preencha o campo!\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n     async function listarTipoEvento() {\r\n        try {\r\n\r\n            const resposta = await api.get(\"tiposEventos\");\r\n            //console.log(resposta.data);\r\n             setListaTipoEvento(resposta.data);\r\n            //console.log(resposta.data);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n      useEffect(() => {\r\n        listarTipoEvento()\r\n       }, [listarTipoEvento]);\r\n\r\n    //  async function deletarTipoEvento(tipoeventoId) {\r\n    //     try {\r\n\r\n    //         Swal.fire({\r\n    //             title: \"Você tem certeza?\",\r\n    //             text: \"Você não poderá reverter isso!\",\r\n    //             icon: \"warning\",\r\n    //             showCancelButton: true,\r\n    //             confirmButtonColor: \"#3085d6\",\r\n    //             cancelButtonColor: \"#d33\",\r\n    //             confirmButtonText: \"Sim, delete isso!\"\r\n    //         }).then(async (result) => {\r\n    //             if (result.isConfirmed) {\r\n    //                 await api.delete(`genero/${tipoeventoId.idTipoEvento}`);\r\n    //                 Swal.fire({\r\n    //                     title: \"Deletado!\",\r\n    //                     text: \"Tipo de evento deletado com sucesso!\",\r\n    //                     icon: \"success\"\r\n    //                 });\r\n    //             }\r\n    //         });\r\n    //         listaTipoEvento();\r\n\r\n    //     } catch (error) {\r\n    //         console.log(error);\r\n    //     }\r\n\r\n    // }\r\n\r\n    // async function editarTipoEvento(tipoEvento) {\r\n    //    console.log(\"yas fica quieta\");\r\n       \r\n    //     const { value: novoTipoEvento } = await Swal.fire({\r\n    //         title: \"Edite seu evento\",\r\n    //         input: \"text\",\r\n    //         inputLabel: \"Novo Tipo Evento\",\r\n    //         inputValue: tipoEvento.tituloTipoEvento,\r\n    //         showCancelButton: true,\r\n    //         inputValidator: (value) => {\r\n    //             if (!value) {\r\n    //                 return \"O campo precisa estar preenchido!\";\r\n    //             }\r\n    //         }\r\n    //     });\r\n    //     if (novoTipoEvento) {\r\n    //         try{\r\n    //             console.log(tipoEvento.tituloTipoEvento);\r\n    //             console.log(novoTipoEvento);\r\n    //             api.put(`tiposEventos/${tipoEvento.idTipoEvento}`,\r\n    //             {nome: novoTipoEvento});\r\n    //             Swal.fire(`O evento modificado ${novoTipoEvento}`);\r\n    //         }catch(error){\r\n    //             console.log(error);\r\n                \r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <main>\r\n                <Cadastro\r\n                    tituloCadastro=\"Cadastro Tipo De Eventos\"\r\n                    visibilidade=\"none\"\r\n                    NomeBotao=\"Cadastrar\"\r\n                    img_banner={Img}\r\n                    campoPlaceholder=\"Titulo\"\r\n\r\n                    funcCadastro={cadastrarTipoEvento}\r\n\r\n                    valorInput={tipoEvento}\r\n                    setValorInput={setTipoEvento}\r\n                />\r\n\r\n                <Lista\r\n\r\n                    listatitulo=\"Lista Tipo De Eventos\"\r\n                    titulocoluna=\"Titulo\"\r\n                    titulo=\"Tipo Evento\"\r\n                    titulo1=\"Titulo Evento\"\r\n\r\n                    lista={listaTipoEvento}\r\n                    tipoLista=\"TiposEventos\"\r\n\r\n                    // funcExcluir={deletarTipoEvento}\r\n                    // funcEditar={editarTipoEvento}\r\n                />\r\n\r\n\r\n\r\n            </main>\r\n\r\n\r\n\r\n\r\n\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CadastroTipoEvento;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}