{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\50526683848\\\\Desktop\\\\ReactEvent\\\\event\\\\src\\\\pages\\\\login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport \"./Login.css\";\nimport Botao from \"../../components/botao/Botao\";\nimport Logo1 from \"../..//assets/img/logo1.svg\";\nimport api from \"../../Services/services\";\nimport { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { userDecodeToken } from \"../../auth/Auth\";\nimport secureLocalStorage from \"react-secure-storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  function alertar(icone, mensagem) {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"top-end\",\n      showConfirmButton: false,\n      timer: 3000,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.onmouseenter = Swal.stopTimer;\n        toast.onmouseleave = Swal.resumeTimer;\n      }\n    });\n    Toast.fire({\n      icon: icone,\n      title: mensagem\n    });\n  }\n  async function realizarAutenticacao(e) {\n    e.preventDefault();\n    const usuario = {\n      email: email,\n      senha: senha\n    };\n    if (senha.trim() != \"\" || email.trim() != \"\") {\n      try {\n        const resposta = await api.post(\"Login\", usuario);\n        const token = resposta.data.token;\n        if (token) {\n          //token sera decodificado:\n          const tokenDecodificado = userDecodeToken(token);\n\n          // Armazenando:\n          secureLocalStorage.setItem(\"nomem\", JSON.stringify(tokenDecodificado));\n          if (tokenDecodificado.tipoUsuario === \"aluno\") {\n            //redirecionar a tela de aluno\n          } else {\n            //ele vai me encaminhar pra tela cadastro(vermelha)\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      alertar(\"error\", \"preencha os campos vazios!\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main_login\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section_login\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Logo1,\n        alt: \"Logo do Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        className: \"form_login\",\n        onSubmit: realizarAutenticacao,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campos_login\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"campo_input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"username\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"campo_input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"senha\",\n              placeholder: \"password\",\n              value: senha,\n              onChange: e => setSenha(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.youtube.com/\",\n          children: \"Esqueceu a senha? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Botao, {\n          nomeDoBotao: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"/E1MngM/aP4e0EwD3uQgPDVkvBY=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Botao","Logo1","api","useState","Swal","userDecodeToken","secureLocalStorage","jsxDEV","_jsxDEV","Login","_s","email","setEmail","senha","setSenha","alertar","icone","mensagem","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","onmouseenter","stopTimer","onmouseleave","resumeTimer","fire","icon","title","realizarAutenticacao","e","preventDefault","usuario","trim","resposta","post","token","data","tokenDecodificado","setItem","JSON","stringify","tipoUsuario","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","action","onSubmit","htmlFor","type","name","placeholder","value","onChange","target","href","nomeDoBotao","_c","$RefreshReg$"],"sources":["C:/Users/50526683848/Desktop/ReactEvent/event/src/pages/login/Login.jsx"],"sourcesContent":["import \"./Login.css\"\r\nimport Botao from \"../../components/botao/Botao\";\r\nimport Logo1 from \"../..//assets/img/logo1.svg\";\r\nimport api from \"../../Services/services\"\r\nimport { useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { userDecodeToken } from \"../../auth/Auth\";\r\nimport secureLocalStorage from \"react-secure-storage\";\r\n\r\nconst Login = () => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [senha, setSenha] = useState(\"\")\r\n\r\n     function alertar(icone, mensagem) {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: \"top-end\",\r\n                showConfirmButton: false,\r\n                timer: 3000,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.onmouseenter = Swal.stopTimer;\r\n                    toast.onmouseleave = Swal.resumeTimer;\r\n                }\r\n            });\r\n            Toast.fire({\r\n                icon: icone,\r\n                title: mensagem\r\n            });\r\n        }\r\n\r\n    async function realizarAutenticacao(e) {\r\n        e.preventDefault();\r\n\r\n        const usuario = {\r\n            email: email,\r\n            senha: senha\r\n        }\r\n        if(senha.trim() != \"\" || email.trim() != \"\"){\r\n\r\n            try {\r\n                const resposta = await api.post(\"Login\", usuario);\r\n\r\n                const token = resposta.data.token;\r\n                \r\n                if(token){\r\n                    //token sera decodificado:\r\n                    const tokenDecodificado = userDecodeToken(token);\r\n                    \r\n                    // Armazenando:\r\n                    secureLocalStorage.setItem(\"nomem\", JSON.stringify(tokenDecodificado));\r\n\r\n                    if(tokenDecodificado.tipoUsuario === \"aluno\"){\r\n                        //redirecionar a tela de aluno\r\n                    }else{\r\n                        //ele vai me encaminhar pra tela cadastro(vermelha)\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }else{\r\n            alertar(\"error\", \"preencha os campos vazios!\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main className=\"main_login\">\r\n            <div className=\"banner\"></div>\r\n            <section className=\"section_login\">\r\n                <img src={Logo1} alt=\"Logo do Event\" />\r\n                <form action=\"\" className=\"form_login\" onSubmit={realizarAutenticacao}>\r\n                    <div className=\"campos_login\">\r\n                        <div className=\"campo_input\">\r\n                            <label htmlFor=\"email\"></label>\r\n                            <input type=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"username\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"campo_input\">\r\n                            <label htmlFor=\"senha\"></label>\r\n                            <input type=\"password\"\r\n                                name=\"senha\"\r\n                                placeholder=\"password\"\r\n                                value={senha}\r\n                                onChange={(e) => setSenha(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <a href=\"https://www.youtube.com/\">Esqueceu a senha? </a>\r\n                    <Botao nomeDoBotao=\"Login\" />\r\n                </form>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}