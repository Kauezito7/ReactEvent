{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\50526683848\\\\Desktop\\\\ReactEvent\\\\event\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Importa funcoes do React necessarias para criar e use contexto\nimport { createContext, useState, useContext } from \"react\";\n\n// Cria o contexto de autenticacao, que vai permitir compartilhar dados entre componentes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Esse componente vai envolver a aplicacao (ou parte dela) e fornecer os dados de authenticacao para os filhos\n// Provider = prover/dar\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  // Cria um estado que guarda os dados do ususario logado\n  const [usuario, setUsuario] = useState(() => {\n    const usuarioSalvo = secureLocalStorage.getItem(\"tokenLogin\");\n    return usuarioSalvo ? JSON.parse(usuarioSalvo) : undefined;\n  });\n  return (\n    /*#__PURE__*/\n    // O Athcontext.Provider permite que qualquer componente dentro dele acesse o `usuario` e `setUsuario`\n    // Faz com que qualquer componente que esteja dentro e <AuthProvider> consiga acessar o valor { usuario, setUsuario } usando o hook useAuth().\n    _jsxDEV(AuthContext.Provider, {\n      value: {\n        usuario,\n        setUsuario\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n// Esse hook personalizado facilita o acesso ao contexto dentro de qualquer componente\n// USAR!!!\n_s(AuthProvider, \"Mz/gjYUl8vWO6S5eBJG2hcGGiwo=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","usuario","setUsuario","usuarioSalvo","secureLocalStorage","getItem","JSON","parse","undefined","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/50526683848/Desktop/ReactEvent/event/src/contexts/AuthContext.js"],"sourcesContent":["// Importa funcoes do React necessarias para criar e use contexto\r\nimport { createContext, useState, useContext } from \"react\";\r\n\r\n// Cria o contexto de autenticacao, que vai permitir compartilhar dados entre componentes\r\nconst AuthContext = createContext();\r\n\r\n// Esse componente vai envolver a aplicacao (ou parte dela) e fornecer os dados de authenticacao para os filhos\r\n// Provider = prover/dar\r\nexport const AuthProvider = ({ children}) => {\r\n    // Cria um estado que guarda os dados do ususario logado\r\n    const [usuario, setUsuario] = useState(() => {\r\n        const usuarioSalvo = secureLocalStorage.getItem(\"tokenLogin\");\r\n        return usuarioSalvo ? JSON.parse(usuarioSalvo) : undefined\r\n    });\r\n\r\n    return(\r\n        // O Athcontext.Provider permite que qualquer componente dentro dele acesse o `usuario` e `setUsuario`\r\n        // Faz com que qualquer componente que esteja dentro e <AuthProvider> consiga acessar o valor { usuario, setUsuario } usando o hook useAuth().\r\n        <AuthContext.Provider value={{ usuario, setUsuario}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n// Esse hook personalizado facilita o acesso ao contexto dentro de qualquer componente\r\n// USAR!!!\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n"],"mappings":";;;AAAA;AACA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAE3D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACzC;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACzC,MAAMU,YAAY,GAAGC,kBAAkB,CAACC,OAAO,CAAC,YAAY,CAAC;IAC7D,OAAOF,YAAY,GAAGG,IAAI,CAACC,KAAK,CAACJ,YAAY,CAAC,GAAGK,SAAS;EAC9D,CAAC,CAAC;EAEF;IAAA;IACI;IACA;IACAZ,OAAA,CAACC,WAAW,CAACY,QAAQ;MAACC,KAAK,EAAE;QAAET,OAAO;QAAEC;MAAU,CAAE;MAAAH,QAAA,EAC/CA;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS;EAAC;AAE/B,CAAC;;AAED;AACA;AAAAd,EAAA,CAjBaF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAkBzB,OAAO,MAAMkB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvB,UAAU,CAACG,WAAW,CAAC;AAAA;AAACoB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}