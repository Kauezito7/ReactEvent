{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\50526683848\\\\Desktop\\\\ReactEvent\\\\Projeto Event-React\\\\event\\\\src\\\\pages\\\\cadastroTipoEvento\\\\cadastroTipoEvento.jsx\",\n  _s = $RefreshSig$();\nimport Header from \"../../components/header/Header\";\nimport Footer from \"../../components/footer/Footer\";\nimport Cadastro from \"../../components/cadastro/Cadastro\";\nimport Lista from \"../../components/lista/Lista\";\nimport Banner from \"../../assets/img/evento.png\";\nimport api from \"../../Services/services\";\nimport { useState } from \"react\";\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CadastroTipoEvento = () => {\n  _s();\n  const [tipoEvento, setTipoEvento] = useState(\"\");\n  const [listaEvento, setListaEvento] = useState([]);\n  function alertar(icone, mensagem) {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"top-end\",\n      showConfirmButton: false,\n      timer: 3000,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.onmouseenter = Swal.stopTimer;\n        toast.onmouseleave = Swal.resumeTimer;\n      }\n    });\n    Toast.fire({\n      icon: icone,\n      title: mensagem\n    });\n  }\n  async function cadastrarTipoEvento(evt) {\n    evt.preventDefault();\n    if (tipoEvento.trim() !== \"\") {\n      try {\n        await api.post(\"tiposEventos\", {\n          tituloTipoEvento: tipoEvento\n        });\n        alertar(\"success\", \"Sucesso! Cadastro realizado com sucesso!\");\n        setTipoEvento(\"\");\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      alertar(\"error\", \"Erro! Preencha os campos\");\n    }\n  }\n  async function listarTipoEvento() {\n    try {\n      const tipo = await api.get(\"tituloTipoEvento\");\n      set;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      nomeusu: \"Administrador\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Cadastro, {\n        tituloCadastro: \"Cadastro Tipo de Eventos\",\n        namePlace: \"Titulo\",\n        visibilidade: \"none\",\n        imagem: Banner,\n        funcCadastro: cadastrarTipoEvento,\n        valorInput: tipoEvento,\n        setValorInput: setTipoEvento\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Lista, {\n        titulo: \"Lista tipo de Eventos\",\n        nome: \"Titulo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(CadastroTipoEvento, \"lhangbnG3lR0XdaEZ8lWDkyezPs=\");\n_c = CadastroTipoEvento;\nexport default CadastroTipoEvento;\nvar _c;\n$RefreshReg$(_c, \"CadastroTipoEvento\");","map":{"version":3,"names":["Header","Footer","Cadastro","Lista","Banner","api","useState","Swal","jsxDEV","_jsxDEV","Fragment","_Fragment","CadastroTipoEvento","_s","tipoEvento","setTipoEvento","listaEvento","setListaEvento","alertar","icone","mensagem","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","onmouseenter","stopTimer","onmouseleave","resumeTimer","fire","icon","title","cadastrarTipoEvento","evt","preventDefault","trim","post","tituloTipoEvento","error","console","log","listarTipoEvento","tipo","get","set","children","nomeusu","fileName","_jsxFileName","lineNumber","columnNumber","tituloCadastro","namePlace","visibilidade","imagem","funcCadastro","valorInput","setValorInput","titulo","nome","_c","$RefreshReg$"],"sources":["C:/Users/50526683848/Desktop/ReactEvent/Projeto Event-React/event/src/pages/cadastroTipoEvento/cadastroTipoEvento.jsx"],"sourcesContent":["import Header from \"../../components/header/Header\";\r\nimport Footer from \"../../components/footer/Footer\";\r\nimport Cadastro from \"../../components/cadastro/Cadastro\";\r\nimport Lista from \"../../components/lista/Lista\";\r\nimport Banner from \"../../assets/img/evento.png\"\r\n\r\nimport api from \"../../Services/services\"\r\nimport { useState } from \"react\";\r\nimport Swal from 'sweetalert2'\r\n\r\nconst CadastroTipoEvento = () => {\r\n\r\n    const [tipoEvento, setTipoEvento] = useState (\"\");\r\n    const [listaEvento, setListaEvento] = useState([]);\r\n\r\n  function alertar(icone, mensagem) {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"top-end\",\r\n      showConfirmButton: false,\r\n      timer: 3000,\r\n      timerProgressBar: true,\r\n      didOpen: (toast) => {\r\n        toast.onmouseenter = Swal.stopTimer;\r\n        toast.onmouseleave = Swal.resumeTimer;\r\n      }\r\n    });\r\n    Toast.fire({\r\n      icon: icone,\r\n      title: mensagem\r\n    });\r\n  }\r\n\r\n     async function cadastrarTipoEvento(evt) {\r\n      \r\n        evt.preventDefault();\r\n\r\n        if (tipoEvento.trim() !== \"\") {\r\n            try {\r\n                await api.post(\"tiposEventos\", {tituloTipoEvento: tipoEvento})\r\n                alertar(\"success\", \"Sucesso! Cadastro realizado com sucesso!\");               \r\n                setTipoEvento(\"\")\r\n                    \r\n            } catch (error) {\r\n                console.log(error);\r\n                \r\n            }\r\n        }else{\r\n            alertar(\"error\", \"Erro! Preencha os campos\")\r\n        }\r\n    }\r\n\r\n\r\n    async function listarTipoEvento () {\r\n        try {\r\n            const tipo = await api.get(\"tituloTipoEvento\")\r\n            set\r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    } \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        <Header nomeusu = \"Administrador\"/>\r\n        <main>\r\n            <Cadastro\r\n                tituloCadastro=\"Cadastro Tipo de Eventos\"\r\n                namePlace=\"Titulo\"\r\n                visibilidade = \"none\"\r\n                imagem = {Banner}\r\n                funcCadastro = {cadastrarTipoEvento}\r\n                valorInput = {tipoEvento}\r\n                setValorInput = {setTipoEvento}\r\n            />\r\n\r\n            \r\n            <Lista titulo = \"Lista tipo de Eventos\"\r\n                   nome = \"Titulo\"\r\n                   />\r\n                   \r\n\r\n        </main>\r\n        <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CadastroTipoEvento;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}