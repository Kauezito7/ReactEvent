{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\50526683848\\\\Desktop\\\\ReactEvent\\\\Projeto Event-React\\\\event\\\\src\\\\pages\\\\cadastroTipoEvento\\\\cadastroTipoEvento.jsx\",\n  _s = $RefreshSig$();\nimport Header from \"../../components/header/Header\";\nimport Footer from \"../../components/footer/Footer\";\nimport Cadastro from \"../../components/cadastro/Cadastro\";\nimport Lista from \"../../components/lista/Lista\";\nimport Banner from \"../../assets/img/evento.png\";\nimport api from \"../../Services/services\";\nimport { useEffect, useState } from \"react\";\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CadastroTipoEvento = () => {\n  _s();\n  const [tipoEvento, setTipoEvento] = useState(\"\");\n  const [listaTipoEvento, setListaTipoEvento] = useState([]);\n  function alertar(icone, mensagem) {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"top-end\",\n      showConfirmButton: false,\n      timer: 3000,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.onmouseenter = Swal.stopTimer;\n        toast.onmouseleave = Swal.resumeTimer;\n      }\n    });\n    Toast.fire({\n      icon: icone,\n      title: mensagem\n    });\n  }\n  async function cadastrarTipoEvento(evt) {\n    evt.preventDefault();\n    if (tipoEvento.trim() !== \"\") {\n      try {\n        await api.post(\"tiposEventos\", {\n          tituloTipoEvento: tipoEvento\n        });\n        alertar(\"success\", \"Sucesso! Cadastro realizado com sucesso!\");\n        setTipoEvento(\"\");\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      alertar(\"error\", \"Erro! Preencha os campos\");\n    }\n  }\n  async function listarTipoEvento() {\n    try {\n      const resposta = await api.get(\"TipoEvento\");\n      console.log(resposta.data);\n      setListaTipoEvento(resposta.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // Excluir Tipo Evento.\n  async function excluirTipoEvento(id) {\n    const result = await Swal.fire({\n      title: \"Você tem certeza que quer excluir?\",\n      text: \"Você não vai poder reverter isso!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Sim, deletar isso!\"\n    });\n    if (result.isConfirmed) {\n      try {\n        console.log(\"ID enviado para deletar:\", id);\n        await api.delete(`TipoEvento/${id}`);\n        alertar(\"success\", \"Deletado com sucesso!\");\n        listarTipoEvento();\n      } catch (error) {\n        console.error(\"Erro ao deletar:\", error.response || error);\n        alertar(\"error\", \"Erro ao deletar.\");\n      }\n    }\n  }\n\n  // Editar Tipo Evento.\n  async function editarTipoEvento(tiposEventos) {\n    const {\n      value: novoTipoEvento\n    } = await Swal.fire({\n      title: \"Modifique seu Tipo Evento\",\n      input: \"text\",\n      confirmButtonColor: '#B51D44',\n      cancelButtonColor: '#000000',\n      inputLabel: \"Novo Tipo Evento\",\n      inputValue: tiposEventos.tituloTipoEvento,\n      showCancelButton: true,\n      inputValidator: value => {\n        if (!value) {\n          return \"O campo não pode estar vazio!\";\n        }\n      }\n    });\n    if (novoTipoEvento) {\n      try {\n        await api.put(`TipoEvento/${tiposEventos.idTipoEvento}`, {\n          TituloTipoEvento: novoTipoEvento\n        });\n        alertar(\"success\", \"Tipo Evento Modificado!\");\n        await listarTipoEvento();\n        Swal.fire(`Seu novo Tipo Evento é: ${novoTipoEvento}`);\n      } catch (error) {\n        console.error(\"Erro ao editar:\", error);\n        Swal.fire(\"Erro!\", \"Não foi possível editar o Tipo Evento.\", \"error\");\n      }\n    }\n  }\n\n  // Use Effect.\n  useEffect(() => {\n    listarTipoEvento();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      nomeusu: \"Administrador\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Cadastro, {\n        tituloCadastro: \"Cadastro Tipo de Eventos\",\n        namePlace: \"Titulo\",\n        visibilidade: \"none\",\n        imagem: Banner,\n        funcCadastro: cadastrarTipoEvento,\n        valorInput: tipoEvento,\n        setValorInput: setTipoEvento\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Lista, {\n        titulo: \"Lista tipo de Eventos\",\n        nome: \"Titulo\",\n        visibilidade: \"table-cell\",\n        listaTipoEvento: listaTipoEvento,\n        editarTipoEvento: editarTipoEvento,\n        excluirTipoEvento: excluirTipoEvento\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(CadastroTipoEvento, \"ww2vUlXB+BQq68yxWNZkikQ82s4=\");\n_c = CadastroTipoEvento;\nexport default CadastroTipoEvento;\nvar _c;\n$RefreshReg$(_c, \"CadastroTipoEvento\");","map":{"version":3,"names":["Header","Footer","Cadastro","Lista","Banner","api","useEffect","useState","Swal","jsxDEV","_jsxDEV","Fragment","_Fragment","CadastroTipoEvento","_s","tipoEvento","setTipoEvento","listaTipoEvento","setListaTipoEvento","alertar","icone","mensagem","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","onmouseenter","stopTimer","onmouseleave","resumeTimer","fire","icon","title","cadastrarTipoEvento","evt","preventDefault","trim","post","tituloTipoEvento","error","console","log","listarTipoEvento","resposta","get","data","excluirTipoEvento","id","result","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","delete","response","editarTipoEvento","tiposEventos","value","novoTipoEvento","input","inputLabel","inputValue","inputValidator","put","idTipoEvento","TituloTipoEvento","children","nomeusu","fileName","_jsxFileName","lineNumber","columnNumber","tituloCadastro","namePlace","visibilidade","imagem","funcCadastro","valorInput","setValorInput","titulo","nome","_c","$RefreshReg$"],"sources":["C:/Users/50526683848/Desktop/ReactEvent/Projeto Event-React/event/src/pages/cadastroTipoEvento/cadastroTipoEvento.jsx"],"sourcesContent":["import Header from \"../../components/header/Header\";\r\nimport Footer from \"../../components/footer/Footer\";\r\nimport Cadastro from \"../../components/cadastro/Cadastro\";\r\nimport Lista from \"../../components/lista/Lista\";\r\nimport Banner from \"../../assets/img/evento.png\"\r\n\r\nimport api from \"../../Services/services\"\r\nimport { useEffect, useState } from \"react\";\r\nimport Swal from 'sweetalert2'\r\n\r\nconst CadastroTipoEvento = () => {\r\n\r\n    const [tipoEvento, setTipoEvento] = useState(\"\");\r\n    const [listaTipoEvento, setListaTipoEvento] = useState([]);\r\n\r\n    function alertar(icone, mensagem) {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.onmouseenter = Swal.stopTimer;\r\n                toast.onmouseleave = Swal.resumeTimer;\r\n            }\r\n        });\r\n        Toast.fire({\r\n            icon: icone,\r\n            title: mensagem\r\n        });\r\n    }\r\n\r\n    async function cadastrarTipoEvento(evt) {\r\n\r\n        evt.preventDefault();\r\n\r\n        if (tipoEvento.trim() !== \"\") {\r\n            try {\r\n                await api.post(\"tiposEventos\", { tituloTipoEvento: tipoEvento })\r\n                alertar(\"success\", \"Sucesso! Cadastro realizado com sucesso!\");\r\n                setTipoEvento(\"\")\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n\r\n            }\r\n        } else {\r\n            alertar(\"error\", \"Erro! Preencha os campos\")\r\n        }\r\n    }\r\n\r\n\r\n    async function listarTipoEvento() {\r\n        try {\r\n            const resposta = await api.get(\"TipoEvento\");\r\n            console.log(resposta.data);\r\n            setListaTipoEvento(resposta.data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // Excluir Tipo Evento.\r\n    async function excluirTipoEvento(id) {\r\n        const result = await Swal.fire({\r\n            title: \"Você tem certeza que quer excluir?\",\r\n            text: \"Você não vai poder reverter isso!\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Sim, deletar isso!\"\r\n        });\r\n\r\n\r\n        if (result.isConfirmed) {\r\n            try {\r\n                console.log(\"ID enviado para deletar:\", id);\r\n                await api.delete(`TipoEvento/${id}`);\r\n                alertar(\"success\", \"Deletado com sucesso!\");\r\n                listarTipoEvento();\r\n            } catch (error) {\r\n                console.error(\"Erro ao deletar:\", error.response || error);\r\n                alertar(\"error\", \"Erro ao deletar.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    // Editar Tipo Evento.\r\n    async function editarTipoEvento(tiposEventos) {\r\n        const { value: novoTipoEvento } = await Swal.fire({\r\n            title: \"Modifique seu Tipo Evento\",\r\n            input: \"text\",\r\n            confirmButtonColor: '#B51D44',\r\n            cancelButtonColor: '#000000',\r\n            inputLabel: \"Novo Tipo Evento\",\r\n            inputValue: tiposEventos.tituloTipoEvento,\r\n            showCancelButton: true,\r\n            inputValidator: (value) => {\r\n                if (!value) {\r\n                    return \"O campo não pode estar vazio!\";\r\n                }\r\n            }\r\n        });\r\n\r\n        if (novoTipoEvento) {\r\n            try {\r\n                await api.put(`TipoEvento/${tiposEventos.idTipoEvento}`, {\r\n                    TituloTipoEvento: novoTipoEvento\r\n                });\r\n\r\n                alertar(\"success\", \"Tipo Evento Modificado!\");\r\n\r\n                await listarTipoEvento();\r\n\r\n                Swal.fire(`Seu novo Tipo Evento é: ${novoTipoEvento}`);\r\n            } catch (error) {\r\n                console.error(\"Erro ao editar:\", error);\r\n                Swal.fire(\"Erro!\", \"Não foi possível editar o Tipo Evento.\", \"error\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Use Effect.\r\n    useEffect(() => {\r\n        listarTipoEvento();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header nomeusu=\"Administrador\" />\r\n            <main>\r\n                <Cadastro\r\n                    tituloCadastro=\"Cadastro Tipo de Eventos\"\r\n                    namePlace=\"Titulo\"\r\n                    visibilidade=\"none\"\r\n                    imagem={Banner}\r\n                    funcCadastro={cadastrarTipoEvento}\r\n                    valorInput={tipoEvento}\r\n                    setValorInput={setTipoEvento}\r\n                />\r\n\r\n\r\n                <Lista titulo=\"Lista tipo de Eventos\"\r\n                    nome=\"Titulo\"\r\n                    visibilidade=\"table-cell\"\r\n                    listaTipoEvento={listaTipoEvento}\r\n                    editarTipoEvento={editarTipoEvento}\r\n                    excluirTipoEvento={excluirTipoEvento}\r\n                />\r\n\r\n\r\n            </main>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CadastroTipoEvento;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}